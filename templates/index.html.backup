<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PC33 Virtual Machines | Nutanix Lab</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
</head>
<body>

<header>
    <div class="header-container">
        <div class="logo">
            <i class="fas fa-cloud"></i>
            <span>Nutanix Lab</span>
        </div>
    </div>
</header>

<div class="main-container">
    <div class="page-header">
        <h1>PC33 Virtual Machines</h1>
        <p>Manage and access your virtual machines in the Nutanix lab environment</p>
    </div>

    <div id="error-message" class="alert alert-danger" style="display: none;">
        <i class="fas fa-exclamation-circle alert-icon"></i>
        <span class="alert-text"></span>
    </div>

    <div class="card">
        <div class="card-header">
            <h2><i class="fas fa-desktop"></i> Powered On Virtual Machines</h2>
            <div class="card-actions">
                <div class="search-container" style="margin-right: 1rem;">
                    <input type="text" id="vm-search" placeholder="Search VM name..." class="search-input">
                </div>
                <div class="last-updated" style="margin-right: 1rem; font-size: 0.8rem; color: #666;">
                    Last updated: <span id="last-updated-time">-</span>
                </div>
                <button class="btn btn-primary">
                    <i class="fas fa-sync-alt btn-icon"></i> Refresh
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="vm-table">
                    <thead>
                        <tr>
                            <th>VM Name</th>
                            <th>Status</th>
                            <th>vCPUs</th>
                            <th>Memory</th>
                            <th>IP Address</th>
                            <th>Console</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- VM rows will be inserted here by JavaScript -->
                        <tr>
                            <td colspan="5" style="text-align: center;">Loading virtual machines...</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<footer>
    <div class="footer-container">
        <img src="https://raw.githubusercontent.com/nutanixed/flask-vm-dashboard/main/templates/nutanix_logo.png" alt="Nutanix Logo" class="nutanix-logo">
        <div class="copyright">
            &copy; 2025 Nutanix, Inc. All rights reserved.
        </div>
    </div>
</footer>

<script>
    // Simulate loading animation
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(function() {
            fetchVMs();
        }, 1000);

        // Add search functionality
        const searchInput = document.getElementById('vm-search');
        searchInput.addEventListener('input', filterVMs);

        // Add refresh button functionality
        const refreshButton = document.querySelector('.btn-primary');
        refreshButton.addEventListener('click', function() {
            // Clear the search input
            searchInput.value = '';
            // Fetch fresh VM data
            fetchVMs();
        });

        // Add keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + R to refresh
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                document.querySelector('.btn-primary').click();
            }
            // Ctrl/Cmd + F to focus search
            if ((e.ctrlKey || e.metaKey) && e.key === 'f') {
                e.preventDefault();
                document.getElementById('vm-search').focus();
            }
        });
    });

    function filterVMs() {
        const searchTerm = document.getElementById('vm-search').value.toLowerCase();
        const rows = document.querySelectorAll('#vm-table tbody tr');
        let hasVisibleRows = false;
        
        rows.forEach(row => {
            if (row.id === 'no-results-row') return; // Skip the no results row
            const vmName = row.querySelector('td:first-child').textContent.toLowerCase();
            if (vmName.includes(searchTerm)) {
                row.style.display = '';
                hasVisibleRows = true;
            } else {
                row.style.display = 'none';
            }
        });

        // Show "No results" message if no VMs match the search
        const noResultsRow = document.querySelector('#no-results-row');
        if (!hasVisibleRows && searchTerm) {
            if (!noResultsRow) {
                const row = document.createElement('tr');
                row.id = 'no-results-row';
                row.innerHTML = `
                    <td colspan="5" style="text-align: center; color: #666;">
                        <i class="fas fa-search"></i> No VMs found matching "${searchTerm}"
                    </td>
                `;
                document.querySelector('#vm-table tbody').appendChild(row);
            }
        } else if (noResultsRow) {
            noResultsRow.remove();
        }
    }

    function fetchVMs() {
        const tableBody = document.querySelector('#vm-table tbody');
        tableBody.innerHTML = `
            <tr>
                <td colspan="5" style="text-align: center;">
                    <i class="fas fa-spinner fa-spin"></i> Loading virtual machines...
                </td>
            </tr>
        `;
        
        fetch('/api/vms')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                const tableBody = document.querySelector('#vm-table tbody');
                tableBody.innerHTML = ''; // Clear loading message
                
                if (data.length === 0) {
                    showError('No powered on VMs found.');
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td colspan="5" style="text-align: center;">No virtual machines are currently powered on.</td>
                    `;
                    tableBody.appendChild(row);
                } else {
                    data.forEach(vm => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td><strong>${vm.name}</strong></td>
                            <td><span class="status status-active"><i class="fas fa-circle"></i>&nbsp;&nbsp;Running</span></td>
                            <td>${vm.vcpus || '4'}</td>
                            <td>${vm.memory_gb ? vm.memory_gb + ' GB' : '8 GB'}</td>
                            <td>${vm.ip_addresses && vm.ip_addresses.length > 0 ? vm.ip_addresses.join(', ') : 'No IP'}</td>
                            <td>
                                <a href="${vm.console_url}" 
                                   class="btn btn-primary console-btn" 
                                   target="_blank"
                                   title="Open console in new tab: ${vm.console_url}">
                                    <i class="fas fa-terminal btn-icon"></i> Console
                                </a>
                            </td>
                        `;
                        tableBody.appendChild(row);
                    });
                }
                // Update last updated timestamp
                const now = new Date();
                document.getElementById('last-updated-time').textContent = now.toLocaleTimeString();
            })
            .catch(error => {
                console.error('Error:', error);
                showError('Error loading VM data. Please try again later.');
                const tableBody = document.querySelector('#vm-table tbody');
                tableBody.innerHTML = `
                    <tr>
                        <td colspan="5" style="text-align: center; color: var(--nutanix-danger);">
                            <i class="fas fa-exclamation-triangle"></i> Unable to load VM data
                        </td>
                    </tr>
                `;
            });
    }

    function showError(message) {
        const errorElement = document.getElementById('error-message');
        errorElement.style.display = 'flex';
        errorElement.querySelector('.alert-text').textContent = message;
    }
</script>

</body>
</html>